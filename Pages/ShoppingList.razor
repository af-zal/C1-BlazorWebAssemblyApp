@page "/shoppinglist"
@layout ShoppingListLayout


@using BlazorWebAssemblyApp.Data

<PageTitle>@title</PageTitle> <!--PageTitle is a built-in component-->

<h3>ShoppingList</h3>
<!--<input placeholder="Grocery Name" @bind="groceryName"/>
<input placeholder="Grocery Price" @bind="groceryPrice" />
<button @onclick="AddGrocery">Add Grocery</button>   -->

<EditForm Model="@grocery" OnSubmit="AddGrocery">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    <p>
        <label>
            Name: 
            <InputText @bind-Value="grocery.Name"/>
        </label>
    </p>
    <p>
        <label>
            Price: 
            <InputNumber @bind-Value="grocery.Price"/>
        </label>
    </p>
    <button type="submit">Add Grocery</button>
</EditForm>




@*<ul>
    @foreach(var grocery in groceries)
    {
        <li>@grocery.Name -- @grocery.Price</li>
    }
</ul>
*@
<table class="table table-sm">
    <tr>
        <th>Name</th>
        <th>Price</th>
        <th></th>
    </tr>
    @foreach(var grocery in groceries)
    {
        <Item GroceryItem="@grocery" OnGroceryPriceIncreased="OnGroceryPriceIncreased"></Item>
    }
</table>

<h1>Total(@groceries.Sum(grocery=>grocery.Price))</h1>
<!--<h1>Total ((@sum)</h1>  One way data binding using at sign-->

@code {
    private float sum = 0;

    private string title = "Our Groceries";
    private string groceryName="";
    private float groceryPrice;

    private List<Grocery> groceries = new();
    private Grocery grocery = new();

    private void AddGrocery()
    {
        //if(!string.IsNullOrWhiteSpace(groceryName) && groceryPrice > 0)
        //{
            //groceries.Add(new Grocery { Name = groceryName, Price = groceryPrice });
            //sum += groceryPrice;

            //groceryName = string.Empty;
            // groceryPrice = 0;
            //groceries.Add(grocery);
            //grocery = new();

        //}
        groceries.Add(grocery);
        grocery = new();
    }

    public void updateTotalAmount()
    {
        sum = groceries.Sum(x => x.Price);
    }

    public void OnGroceryPriceIncreased()
    {
        updateTotalAmount();
    }
}
